Sub stock_market()



'set worksheet
Dim ws As Worksheet

'loop through all stocks for one year
For Each ws In Worksheets




'set variable for ticker symbol
Dim ticker_symbol As String

'set variable for total stock volume
Dim stock_volume As Double
stock_volume = 0

'keep track of the location for each ticker symbol in the summary table
Dim summary_ticker_row As Integer
summary_ticker_row = 2

'yearly change=close price at end of trading year - open price at the beginning of trading year
'percent change is calculated using the same values = (close price - open price / open) * 100

'set variables for the above

Dim close_price As Double
Dim yearly_change As Double
Dim percent_change As Double
Dim open_price As Double
open_price = Cells(2, 3).Value

'create column headings for the summary table
ws.Cells(1, 9).Value = "Ticker"
ws.Cells(1, 10).Value = "Yearly Change"
ws.Cells(1, 11).Value = "Percent Change"
ws.Cells(1, 12).Value = "Total Stock Volume"

'set a counter for last row of the data
last_row = ws.Cells(Rows.Count, 1).End(xlUp).Row

    'loop through all stock in this worksheet
 For i = 2 To last_row

    'check if we are still within the same ticker
    If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then
    
   'set the ticker symbol
    ticker_symbol = ws.Cells(i, 1).Value
    
    'add the total stock volume
    stock_volume = stock_volume + ws.Cells(i, 7).Value
    
    'print ticker symbol in summary table
    ws.Range("I" & summary_ticker_row).Value = ticker_symbol
    
    'print stock volume in summary table
    ws.Range("L" & summary_ticker_row).Value = stock_volume
    
    'set close price
    close_price = ws.Cells(i, 6).Value
    
    'entering yearly change formula
    yearly_change = close_price - open_price
    
    'print yearly change in summary table
    ws.Range("J" & summary_ticker_row).Value = yearly_change
    
    'fix the open price equal zero
        If open_price = 0 Then
        
        percent_change = 0
        
Else
        
        percent_change = (close_price - open_price) / open_price
        
    End If
        
    'print the percent change in summary table
    ws.Range("K" & summary_ticker_row).Value = percent_change
    
    'percent change returning as long, format with number format
    ws.Range("K" & summary_ticker_row).NumberFormat = "0.00%"
    
    'add 1 to summary ticker row
    summary_ticker_row = summary_ticker_row + 1
    
    'reset stock volume to 0
    stock_volume = 0
    
    'reset opening price as I set this outside of the loop, unlike closing price
    open_price = ws.Cells(i + 1, 3)
    
  Else

  'add the volume of stock
  stock_voume = stock_volume + ws.Cells(i, 7).Value
    
 End If

Next i




'CONDITIONAL FORMATTING
''highlight positive change in green = 4
'''highlight negative change in red = 3

'set a counter for last row of the summary table
last_row_summary_table = ws.Cells(Rows.Count, 9).End(xlUp).Row

'loop through all the data in the summary table
    For i = 2 To last_row_summary_table
    
    'define a negative cell
    If ws.Cells(i, 10).Value < 0 Then
    
    'assign red colour to these cells
    ws.Cells(i, 10).Interior.ColorIndex = 3
    
    'don't need to define a positive cell, instead just make all other cells green
 Else
 ws.Cells(i, 10).Interior.ColorIndex = 4
    
  End If
    
Next i
    
    
    
    
'CHALLENGE 1
''return the stock with the "Greatest % increase", "Greatest % decrease" and "Greatest total volume"

'create those table headings
ws.Cells(2, 15).Value = "Greatest % Increase"
ws.Cells(3, 15).Value = "Greatest % Decrease"
ws.Cells(4, 15).Value = "Greatest Total Volume"
ws.Cells(1, 16).Value = "Ticker"
ws.Cells(1, 17).Value = "Value"


'cell (2,17) is going to be the max value in column K, cell(3,17) the min value
'cell (2,16) and (3,16) need to return the ticker symbol for the above
'cell(4,17) will be max value in column L and cell (4,16) will return the corresponding ticker symbol


'loop through all the data in the summary table
For i = 2 To last_row_summary_table
            
    'find the max percent change in column K
    If ws.Cells(i, 11).Value = Application.WorksheetFunction.Max(ws.Range("K2:K" & last_row_summary_table)) Then
    'returning percent change to table
    ws.Cells(2, 17).Value = ws.Cells(i, 11).Value
    'returning ticker symbol to table
    ws.Cells(2, 16).Value = ws.Cells(i, 9).Value
    'percent change returning as long, format with number format
    ws.Cells(2, 17).NumberFormat = "0.00%"
    
    'now find the min percent change in column K
    ElseIf ws.Cells(i, 11).Value = Application.WorksheetFunction.Min(ws.Range("K2:K" & last_row_summary_table)) Then
    ws.Cells(3, 17).Value = ws.Cells(i, 11).Value
    ws.Cells(3, 16).Value = ws.Cells(i, 9).Value
    ws.Cells(3, 17).NumberFormat = "0.00%"
            
    'find the max total stock volume in column L
    ElseIf ws.Cells(i, 12).Value = Application.WorksheetFunction.Max(ws.Range("L2:L" & last_row_summary_table)) Then
    ws.Cells(4, 17).Value = ws.Cells(i, 12).Value
    ws.Cells(4, 16).Value = ws.Cells(i, 9).Value

  End If
        
 Next i


'CHALLENGE 2
''adjust so the VBA script will run on every worksheet
''''set worksheet at the beginning of the code and loop through all stocks for one year
''''at end of code apply next worksheet

Next ws


End Sub

